# T5転移学習 - 段階的解凍（10エポック版）
# 2エポック凍結 → 解凍して微調整、Early Stopping付き

# 共通設定を継承
extends: shared_base.yaml

# T5転移学習設定
transfer_learning:
  use_pretrained_lm: true
  lm_name_or_path: "t5-base"           # 正式ID（約60M parameters）
  freeze_lm_epochs: 2                   # 2エポック凍結
  patch_len: 32                         # 128/32=4 patches
  lm_learning_rate_factor: 0.1          # T5学習率を100倍に大幅増加

# データ設定は shared_base.yaml から継承

# モデルアーキテクチャ（T5統合）
model:
  tf_stem:
    kernel_size: 3
    d_model: 64                   # T5出力をこの次元に投影
    
  encoder:
    n_layers: 4                   # T5後の追加層数
    d_model: 64                   # Stage-1の次元（T5から投影）
    d_state: 8
    d_conv: 4
    expand: 2
    cross_attn_every: 2
    flash_attn: true
    
  bottleneck:
    latent_len: 16                # seq_len/8 = 128/8 = 16
    stride: 8
    
  decoder:
    n_layers: 2
    kernel_size: 3
    
  positional:
    intra_tf: "rotary"
    inter_tf: "learned"

# 訓練設定（10エポック版）
training:
  epochs: 5                       # 統一設定：5エポック
  early_stop:
    patience: 3                   # 3エポック改善なしで早期終了
    min_delta: 0.001
    
  accumulate_grad_batches: 8      # safeモード：shared_baseと同期
  precision: "16-mixed"

# データ拡張（無効化）
augmentation:
  ddim_noise:
    probability: 0.0
  time_warp:
    probability: 0.0
  regime_mix:
    probability: 0.0

# 検証・メトリクス
validation:
  val_split: 0.2
  metrics:
    - "correlation_per_tf"
    - "consistency_ratio"
    - "spectral_delta"

# ログ・チェックポイント（10エポック最適化）
logging:
  log_every_n_steps: 10
  checkpoint_every_n_epochs: 1    # 毎エポック評価
  save_top_k: 2                   # ベスト2のみ保存（ディスク節約）
  monitor: "val_correlation_mean"
  progress_bar_refresh_rate: 50

# 実行設定
runtime:
  seed: 42
  experiment_name: "t5_freeze_10ep"
  
# 開発用設定（総データ量の2%程度）
development:
  limit_train_batches: 970        # 約2%（48,504の2%）
  limit_val_batches: 194          # 約2%（train:val = 8:2想定）

# DataLoader最適化（T5用）
dataloader:
  num_workers: 3                  # T5メモリ負荷を考慮
  persistent_workers: false       # メモリ安定性のため無効